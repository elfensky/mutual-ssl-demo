# HTTO OVER PORTS 80 & 5000
server {
    listen 80;
    listen 5000;
    server_name server.mssl.example;

    access_log /logs/http.access.log;
    error_log /logs/http.error.log;

    location / {
		  proxy_pass http://server:4000/http;
	  }
}

# HTTPS OVER 443 USING 'SERVER.MSSL.EXAMPLE'
server {
    listen 443 ssl;
    server_name server.mssl.example;
    access_log /logs/server.access.log main;
    error_log /logs/server.error.log;

    # General config
    gzip on;

    # SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    

    # Certificates used for HTTPS
    ssl_certificate /etc/nginx/certs/server.mssl.example.crt;
    ssl_certificate_key /etc/nginx/certs/server.mssl.example.key;

    # Certificates used for Client Authentication
    # ssl_trusted_certificate /etc/nginx/certs/user.crt; 
    ssl_client_certificate /etc/nginx/certs/ca.crt;
    ssl_verify_client optional_no_ca;
    # ssl_verify_depth 2;
    # ssl_ocsp on;

    location / {
        proxy_set_header X-Forwarded-For "server.mssl.example";
        proxy_set_header X-Forwarded-Proto "https";

        # proxy_set_header        Host $host;
        # proxy_set_header        X-Real-IP $remote_addr;
        # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header        X-Forwarded-Proto $scheme;

        proxy_set_header     SSL_Client_Issuer $ssl_client_i_dn;
        proxy_set_header     SSL_Client $ssl_client_s_dn;
        proxy_set_header     SSL_Client_Verify $ssl_client_verify;

        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection $connection_upgrade;

        proxy_pass http://server:4000/mssl;
        proxy_read_timeout  90;
    }
}